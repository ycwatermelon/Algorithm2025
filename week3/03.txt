class Solution {
public:
    int intersectionSizeTwo(vector<vector<int>>& intervals) {

        sort(intervals.begin(), intervals.end(), [](const vector<int>& a, const vector<int>& b) {
            if (a[1] == b[1]) return a[0] > b[0];
            return a[1] < b[1];
        });

        vector<int> points;

        for (const auto& interval : intervals) {
            int start = interval[0];
            int end = interval[1];

            int count = 0; 
            for (int point : points) {
                if (point >= start && point <= end) {
                    count++;
                }
            }
            
            if (count == 0) {
                points.push_back(end - 1);  
                points.push_back(end);     
            } 
            else if (count == 1) {
                int newPoint = (points.back() == end) ? end - 1 : end;
                points.push_back(newPoint);
            }
        }
        return points.size();
    }
};
