/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode dummy(0);
        dummy.next = head;

        ListNode* pre = &dummy;

        while (true) {
            ListNode* end = pre;
            for (int i = 0; i < k; i++) {
                end = end->next;
                if (!end) return dummy.next;
            }
            
            ListNode* next_group_start = end->next;
            
            ListNode* start = pre->next;
            ListNode* curr = start;
            ListNode* prev = nullptr;
            
            for (int i = 0; i < k; i++) {
                ListNode* next_temp = curr->next;
                curr->next = prev;
                prev = curr;
                curr = next_temp;
            }

            pre->next = end; 
            start->next = next_group_start;
            
            pre = start;
        }
    }
};