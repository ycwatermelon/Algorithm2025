class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {

        int left = 1, right = *max_element(piles.begin(), piles.end());
        int result = right; 
        while (left <= right) {
            int mid = left + (right - left) / 2; 

            if (canFinish(piles, h, mid)) {
                result = mid; 
                right = mid - 1; 
            } else {
                left = mid + 1; 
            }
        }
        
        return result;
    }

private:

    bool canFinish(const vector<int>& piles, int h, int k) {
        int hours = 0; 
        
        for (int pile : piles) {

            hours += (pile + k - 1) / k;
            if (hours > h) return false;
        }
        
        return hours <= h; 
    }
};
