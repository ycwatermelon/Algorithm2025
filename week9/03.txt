class Solution {
public:
    int specialPerm(vector<int>& nums) {
        int n = nums.size();
        int MOD = 1e9 + 7;

        vector<vector<int>> dp(1 << n, vector<int>(n, 0));

        for (int i = 0; i < n; i++) {
            dp[1 << i][i] = 1;
        }

        for (int mask = 1; mask < (1 << n); mask++) {
            for (int last = 0; last < n; last++) {

                if (!(mask & (1 << last))) continue;

                for (int next = 0; next < n; next++) {

                    if (mask & (1 << next)) continue;
                    if (nums[last] % nums[next] == 0 || nums[next] % nums[last] == 0) {

                        dp[mask | (1 << next)][next] = (dp[mask | (1 << next)][next] + dp[mask][last]) % MOD;
                    }
                }
            }
        }

        int result = 0;
        for (int last = 0; last < n; last++) {
            result = (result + dp[(1 << n) - 1][last]) % MOD;
        }
        
        return result;
    }
};
